2023-12-10 22:04:17.015 [Execution worker] INFO  ru.tinkoff.kora.config.annotation.processor.ConfigParserGenerator  Generating ConfigValueExtractor for org.example.config.OncallUserConfig
2023-12-10 22:04:17.181 [Execution worker] INFO  ru.tinkoff.kora.kora.app.annotation.processor.extension.Extensions  Extension found: ru.tinkoff.kora.config.annotation.processor.extension.ConfigKoraExtension@254e7266
2023-12-10 22:04:17.181 [Execution worker] INFO  ru.tinkoff.kora.kora.app.annotation.processor.extension.Extensions  Extension found: ru.tinkoff.kora.json.annotation.processor.extension.JsonKoraExtension@1c9cef47
2023-12-10 22:04:17.182 [Execution worker] INFO  ru.tinkoff.kora.kora.app.annotation.processor.extension.Extensions  Extension found: ru.tinkoff.kora.http.server.annotation.processor.extension.HttpServerRequestMapperKoraExtension@30c4b281
2023-12-10 22:04:17.182 [Execution worker] INFO  ru.tinkoff.kora.kora.app.annotation.processor.extension.Extensions  Extension found: ru.tinkoff.kora.http.client.annotation.processor.extension.HttpClientKoraExtension@7800e8ac
2023-12-10 22:04:17.182 [Execution worker] INFO  ru.tinkoff.kora.kora.app.annotation.processor.extension.Extensions  Extension found: ru.tinkoff.kora.http.client.annotation.processor.extension.HttpClientResponseMapperKoraExtension@2e0b6888
2023-12-10 22:04:17.224 [Execution worker] INFO  ru.tinkoff.kora.kora.app.annotation.processor.KoraAppProcessor  Starting kora processor
2023-12-10 22:04:17.226 [Execution worker] INFO  ru.tinkoff.kora.kora.app.annotation.processor.KoraAppProcessor  Nothing was generated previous Round.
2023-12-10 22:04:17.226 [Execution worker] INFO  ru.tinkoff.kora.kora.app.annotation.processor.KoraAppProcessor  Component found: org.example.controller.TestController
2023-12-10 22:04:17.226 [Execution worker] INFO  ru.tinkoff.kora.kora.app.annotation.processor.KoraAppProcessor  Component found: org.example.service.OncallService
2023-12-10 22:04:17.226 [Execution worker] INFO  ru.tinkoff.kora.kora.app.annotation.processor.KoraAppProcessor  Component found: org.example.scheduled.OncallProber
2023-12-10 22:04:17.227 [Execution worker] INFO  ru.tinkoff.kora.kora.app.annotation.processor.KoraAppProcessor  @KoraApp element found: org.example.Application
2023-12-10 22:04:17.228 [Execution worker] INFO  ru.tinkoff.kora.kora.app.annotation.processor.KoraAppProcessor  Effective modules of org.example.Application:
    org.example.Application
    ru.tinkoff.kora.config.common.CommonConfigModule
    ru.tinkoff.kora.config.common.DefaultConfigExtractorsModule
    ru.tinkoff.kora.config.hocon.HoconConfigModule
    ru.tinkoff.kora.http.client.async.AsyncHttpClientModule
    ru.tinkoff.kora.http.client.common.HttpClientModule
    ru.tinkoff.kora.http.client.common.ParameterConvertersModule
    ru.tinkoff.kora.http.client.common.request.HttpClientRequestMapperModule
    ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapperModule
    ru.tinkoff.kora.http.server.common.HttpServerModule
    ru.tinkoff.kora.http.server.common.HttpServerRequestMapperModule
    ru.tinkoff.kora.http.server.common.HttpServerResponseMapperModule
    ru.tinkoff.kora.http.server.common.StringParameterReadersModule
    ru.tinkoff.kora.http.server.undertow.UndertowHttpServerModule
    ru.tinkoff.kora.http.server.undertow.UndertowModule
    ru.tinkoff.kora.json.common.JsonCommonModule
    ru.tinkoff.kora.json.module.JsonModule
    ru.tinkoff.kora.micrometer.module.MetricsModule
    ru.tinkoff.kora.netty.common.NettyCommonModule
    ru.tinkoff.kora.scheduling.common.SchedulingModule
    ru.tinkoff.kora.scheduling.jdk.SchedulingJdkModule

2023-12-10 22:04:17.266 [Execution worker] INFO  ru.tinkoff.kora.kora.app.annotation.processor.KoraAppProcessor  Effective methods of org.example.Application:
    FromModuleComponent[type=com.typesafe.config.Config, module=MixedInModule[element=ru.tinkoff.kora.config.hocon.HoconConfigModule], tags=[], method=hoconConfig(com.typesafe.config.Config), methodParameterTypes=[com.typesafe.config.Config], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=com.typesafe.config.Config, module=MixedInModule[element=ru.tinkoff.kora.config.hocon.HoconConfigModule], tags=[ru.tinkoff.kora.config.common.annotation.ApplicationConfig], method=applicationUnresolved(ru.tinkoff.kora.config.common.origin.ConfigOrigin), methodParameterTypes=[ru.tinkoff.kora.config.common.origin.ConfigOrigin], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=org.asynchttpclient.AsyncHttpClient, module=MixedInModule[element=ru.tinkoff.kora.http.client.async.AsyncHttpClientModule], tags=[], method=nettyAsyncHttpClient(org.asynchttpclient.AsyncHttpClientConfig), methodParameterTypes=[org.asynchttpclient.AsyncHttpClientConfig], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=org.asynchttpclient.AsyncHttpClientConfig, module=MixedInModule[element=ru.tinkoff.kora.http.client.async.AsyncHttpClientModule], tags=[], method=nettyClientConfig(io.netty.channel.EventLoopGroup,ru.tinkoff.kora.http.client.common.HttpClientConfig), methodParameterTypes=[io.netty.channel.EventLoopGroup, ru.tinkoff.kora.http.client.common.HttpClientConfig], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.application.graph.LifecycleWrapper<io.netty.channel.EventLoopGroup>, module=MixedInModule[element=ru.tinkoff.kora.netty.common.NettyCommonModule], tags=[ru.tinkoff.kora.netty.common.NettyCommonModule.BossLoopGroup], method=nettyEventBossLoopGroupLifecycle(java.util.concurrent.ThreadFactory), methodParameterTypes=[java.util.concurrent.ThreadFactory], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.application.graph.LifecycleWrapper<io.netty.channel.EventLoopGroup>, module=MixedInModule[element=ru.tinkoff.kora.netty.common.NettyCommonModule], tags=[ru.tinkoff.kora.netty.common.NettyCommonModule.WorkerLoopGroup], method=nettyEventLoopGroupLifecycle(java.util.concurrent.ThreadFactory,java.lang.Integer), methodParameterTypes=[java.util.concurrent.ThreadFactory, java.lang.Integer], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.application.graph.Wrapped<org.xnio.XnioWorker>, module=MixedInModule[element=ru.tinkoff.kora.http.server.undertow.UndertowModule], tags=[], method=xnioWorker(ru.tinkoff.kora.application.graph.ValueOf<ru.tinkoff.kora.http.server.common.HttpServerConfig>), methodParameterTypes=[ru.tinkoff.kora.application.graph.ValueOf<ru.tinkoff.kora.http.server.common.HttpServerConfig>], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.Config, module=MixedInModule[element=ru.tinkoff.kora.config.common.CommonConfigModule], tags=[], method=config(ru.tinkoff.kora.config.common.Config,ru.tinkoff.kora.config.common.Config,ru.tinkoff.kora.config.common.Config), methodParameterTypes=[ru.tinkoff.kora.config.common.Config, ru.tinkoff.kora.config.common.Config, ru.tinkoff.kora.config.common.Config], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.Config, module=MixedInModule[element=ru.tinkoff.kora.config.common.CommonConfigModule], tags=[ru.tinkoff.kora.config.common.annotation.Environment], method=environmentConfig(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.Config, module=MixedInModule[element=ru.tinkoff.kora.config.common.CommonConfigModule], tags=[ru.tinkoff.kora.config.common.annotation.SystemProperties], method=systemProperties(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.Config, module=MixedInModule[element=ru.tinkoff.kora.config.hocon.HoconConfigModule], tags=[ru.tinkoff.kora.config.common.annotation.ApplicationConfig], method=config(ru.tinkoff.kora.config.common.origin.ConfigOrigin,com.typesafe.config.Config), methodParameterTypes=[ru.tinkoff.kora.config.common.origin.ConfigOrigin, com.typesafe.config.Config], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.ConfigWatcher, module=MixedInModule[element=ru.tinkoff.kora.config.common.CommonConfigModule], tags=[], method=configRefresher(java.util.Optional<ru.tinkoff.kora.application.graph.ValueOf<ru.tinkoff.kora.config.common.origin.ConfigOrigin>>), methodParameterTypes=[java.util.Optional<ru.tinkoff.kora.application.graph.ValueOf<ru.tinkoff.kora.config.common.origin.ConfigOrigin>>], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<double[]>, module=MixedInModule[element=ru.tinkoff.kora.config.common.DefaultConfigExtractorsModule], tags=[], method=doubleArrayConfigValueExtractor(ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<java.lang.Double>), methodParameterTypes=[ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<java.lang.Double>], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<java.lang.Boolean>, module=MixedInModule[element=ru.tinkoff.kora.config.common.DefaultConfigExtractorsModule], tags=[], method=booleanConfigValueExtractor(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<java.lang.Double>, module=MixedInModule[element=ru.tinkoff.kora.config.common.DefaultConfigExtractorsModule], tags=[], method=doubleConfigValueExtractor(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<java.lang.Float>, module=MixedInModule[element=ru.tinkoff.kora.config.common.DefaultConfigExtractorsModule], tags=[], method=floatConfigValueExtractor(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<java.lang.Integer>, module=MixedInModule[element=ru.tinkoff.kora.config.common.DefaultConfigExtractorsModule], tags=[], method=integerConfigValueExtractor(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<java.lang.Long>, module=MixedInModule[element=ru.tinkoff.kora.config.common.DefaultConfigExtractorsModule], tags=[], method=longConfigValueExtractor(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<java.lang.String>, module=MixedInModule[element=ru.tinkoff.kora.config.common.DefaultConfigExtractorsModule], tags=[], method=stringConfigValueExtractor(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<java.time.Duration>, module=MixedInModule[element=ru.tinkoff.kora.config.common.DefaultConfigExtractorsModule], tags=[], method=durationConfigValueExtractor(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<java.time.Period>, module=MixedInModule[element=ru.tinkoff.kora.config.common.DefaultConfigExtractorsModule], tags=[], method=periodConfigValueExtractor(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<java.util.List<T>>, module=MixedInModule[element=ru.tinkoff.kora.config.common.DefaultConfigExtractorsModule], tags=[], method=<T>listConfigValueExtractor(ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<T>), methodParameterTypes=[ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<java.util.Map<java.lang.String,T>>, module=MixedInModule[element=ru.tinkoff.kora.config.common.DefaultConfigExtractorsModule], tags=[], method=<T>mapConfigValueExtractor(ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<T>), methodParameterTypes=[ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<java.util.Properties>, module=MixedInModule[element=ru.tinkoff.kora.config.common.DefaultConfigExtractorsModule], tags=[], method=propertiesConfigValueExtractor(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<java.util.Set<T>>, module=MixedInModule[element=ru.tinkoff.kora.config.common.DefaultConfigExtractorsModule], tags=[], method=<T>setConfigValueExtractor(ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<T>), methodParameterTypes=[ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<java.util.UUID>, module=MixedInModule[element=ru.tinkoff.kora.config.common.DefaultConfigExtractorsModule], tags=[], method=uuidConfigValueExtractor(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<java.util.regex.Pattern>, module=MixedInModule[element=ru.tinkoff.kora.config.common.DefaultConfigExtractorsModule], tags=[], method=patternConfigValueExtractor(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<ru.tinkoff.kora.common.util.Either<A,B>>, module=MixedInModule[element=ru.tinkoff.kora.config.common.DefaultConfigExtractorsModule], tags=[], method=<A,B>eitherExtractor(ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<A>,ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<B>), methodParameterTypes=[ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<A>, ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<B>], typeVariables=[A, B], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<ru.tinkoff.kora.config.common.ConfigValue.ObjectValue>, module=MixedInModule[element=ru.tinkoff.kora.config.common.DefaultConfigExtractorsModule], tags=[], method=subconfigConfigValueExtractor(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.extractor.EnumConfigValueExtractor<T>, module=MixedInModule[element=ru.tinkoff.kora.config.common.DefaultConfigExtractorsModule], tags=[], method=<T>enumConfigValueExtractor(ru.tinkoff.kora.application.graph.TypeRef<T>), methodParameterTypes=[ru.tinkoff.kora.application.graph.TypeRef<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.extractor.OptionalConfigValueExtractor<T>, module=MixedInModule[element=ru.tinkoff.kora.config.common.DefaultConfigExtractorsModule], tags=[], method=<T>optionalConfigValueExtractor(ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<T>), methodParameterTypes=[ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.origin.ConfigOrigin, module=MixedInModule[element=ru.tinkoff.kora.config.hocon.HoconConfigModule], tags=[ru.tinkoff.kora.config.common.annotation.ApplicationConfig], method=applicationConfigOrigin(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.async.AsyncHttpClient, module=MixedInModule[element=ru.tinkoff.kora.http.client.async.AsyncHttpClientModule], tags=[], method=asyncHttpClient(org.asynchttpclient.AsyncHttpClient), methodParameterTypes=[org.asynchttpclient.AsyncHttpClient], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.HttpClientConfig, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.HttpClientModule], tags=[], method=httpClientConfig(ru.tinkoff.kora.config.common.Config,ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<ru.tinkoff.kora.http.client.common.HttpClientConfig>), methodParameterTypes=[ru.tinkoff.kora.config.common.Config, ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<ru.tinkoff.kora.http.client.common.HttpClientConfig>], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.form.FormMultipartClientRequestMapper, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.request.HttpClientRequestMapperModule], tags=[], method=formMultipartClientRequestMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.form.FormUrlEncodedClientRequestMapper, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.request.HttpClientRequestMapperModule], tags=[], method=formUrlEncodedClientRequestMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.request.HttpClientRequestMapper<byte[]>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.request.HttpClientRequestMapperModule], tags=[], method=byteArrayHttpClientRequestMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.request.HttpClientRequestMapper<java.lang.String>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.request.HttpClientRequestMapperModule], tags=[], method=stringHttpClientRequestMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.request.HttpClientRequestMapper<java.nio.ByteBuffer>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.request.HttpClientRequestMapperModule], tags=[], method=byteBufferHttpClientRequestMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.request.HttpClientRequestMapper<java.util.concurrent.Flow.Publisher<java.nio.ByteBuffer>>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.request.HttpClientRequestMapperModule], tags=[], method=byteBufferPublisherHttpClientRequestMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapper<byte[]>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapperModule], tags=[], method=byteArrayHttpClientResponseMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapper<java.lang.String>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapperModule], tags=[], method=stringHttpClientResponseMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapper<java.nio.ByteBuffer>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapperModule], tags=[], method=byteBufferHttpClientResponseMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapper<java.util.concurrent.CompletionStage<byte[]>>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapperModule], tags=[], method=byteArrayCompletionStageHttpClientResponseMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapper<java.util.concurrent.CompletionStage<java.lang.String>>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapperModule], tags=[], method=stringCompletionStageHttpClientResponseMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapper<java.util.concurrent.CompletionStage<java.nio.ByteBuffer>>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapperModule], tags=[], method=byteBufferCompletionStageHttpClientResponseMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapper<java.util.concurrent.CompletionStage<ru.tinkoff.kora.http.common.HttpResponseEntity<T>>>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapperModule], tags=[], method=<T>entityResponseCompletionStageHttpClientResponseMapper(ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapper<T>), methodParameterTypes=[ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapper<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapper<java.util.concurrent.Flow.Publisher<java.nio.ByteBuffer>>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapperModule], tags=[], method=byteBufferFluxHttpClientResponseMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapper<ru.tinkoff.kora.http.common.HttpResponseEntity<T>>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapperModule], tags=[], method=<T>entityResponseHttpClientResponseMapper(ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapper<T>), methodParameterTypes=[ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapper<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.telemetry.DefaultHttpClientTelemetryFactory, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.HttpClientModule], tags=[], method=defaultHttpClientTelemetryFactory(ru.tinkoff.kora.http.client.common.telemetry.HttpClientLoggerFactory,ru.tinkoff.kora.http.client.common.telemetry.HttpClientTracerFactory,ru.tinkoff.kora.http.client.common.telemetry.HttpClientMetricsFactory), methodParameterTypes=[ru.tinkoff.kora.http.client.common.telemetry.HttpClientLoggerFactory, ru.tinkoff.kora.http.client.common.telemetry.HttpClientTracerFactory, ru.tinkoff.kora.http.client.common.telemetry.HttpClientMetricsFactory], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.telemetry.Sl4fjHttpClientLoggerFactory, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.HttpClientModule], tags=[], method=sl4fjHttpClientLoggerFactory(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.writer.StringParameterConverter<java.lang.Boolean>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.ParameterConvertersModule], tags=[], method=booleanConverter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.writer.StringParameterConverter<java.lang.Double>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.ParameterConvertersModule], tags=[], method=doubleConverter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.writer.StringParameterConverter<java.lang.Float>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.ParameterConvertersModule], tags=[], method=floatConverter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.writer.StringParameterConverter<java.lang.Integer>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.ParameterConvertersModule], tags=[], method=integerConverter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.writer.StringParameterConverter<java.lang.Long>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.ParameterConvertersModule], tags=[], method=longConverter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.writer.StringParameterConverter<java.time.LocalDate>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.ParameterConvertersModule], tags=[], method=javaTimeLocalDateStringParameterConverter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.writer.StringParameterConverter<java.time.LocalDateTime>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.ParameterConvertersModule], tags=[], method=javaTimeLocalDateTimeStringParameterConverter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.writer.StringParameterConverter<java.time.LocalTime>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.ParameterConvertersModule], tags=[], method=javaTimeLocalTimeStringParameterConverter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.writer.StringParameterConverter<java.time.OffsetDateTime>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.ParameterConvertersModule], tags=[], method=javaTimeOffsetDateTimeStringParameterConverter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.writer.StringParameterConverter<java.time.OffsetTime>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.ParameterConvertersModule], tags=[], method=javaTimeOffsetTimeStringParameterConverter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.writer.StringParameterConverter<java.time.ZonedDateTime>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.ParameterConvertersModule], tags=[], method=javaTimeZonedDateTimeStringParameterConverter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.writer.StringParameterConverter<java.util.UUID>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.ParameterConvertersModule], tags=[], method=uuidConverter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.HttpServerConfig, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerModule], tags=[], method=httpServerConfig(ru.tinkoff.kora.config.common.Config,ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<ru.tinkoff.kora.http.server.common.HttpServerConfig>), methodParameterTypes=[ru.tinkoff.kora.config.common.Config, ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<ru.tinkoff.kora.http.server.common.HttpServerConfig>], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.PrivateApiHandler, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerModule], tags=[], method=privateApiHandler(ru.tinkoff.kora.application.graph.ValueOf<ru.tinkoff.kora.http.server.common.HttpServerConfig>,ru.tinkoff.kora.application.graph.ValueOf<java.util.Optional<ru.tinkoff.kora.http.server.common.telemetry.PrivateApiMetrics>>,ru.tinkoff.kora.application.graph.All<ru.tinkoff.kora.application.graph.PromiseOf<ru.tinkoff.kora.common.readiness.ReadinessProbe>>,ru.tinkoff.kora.application.graph.All<ru.tinkoff.kora.application.graph.PromiseOf<ru.tinkoff.kora.common.liveness.LivenessProbe>>), methodParameterTypes=[ru.tinkoff.kora.application.graph.ValueOf<ru.tinkoff.kora.http.server.common.HttpServerConfig>, ru.tinkoff.kora.application.graph.ValueOf<java.util.Optional<ru.tinkoff.kora.http.server.common.telemetry.PrivateApiMetrics>>, ru.tinkoff.kora.application.graph.All<ru.tinkoff.kora.application.graph.PromiseOf<ru.tinkoff.kora.common.readiness.ReadinessProbe>>, ru.tinkoff.kora.application.graph.All<ru.tinkoff.kora.application.graph.PromiseOf<ru.tinkoff.kora.common.liveness.LivenessProbe>>], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.form.FormMultipartAsyncServerRequestMapper, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerRequestMapperModule], tags=[], method=formMultipartAsyncServerRequestMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.form.FormMultipartServerRequestMapper, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerRequestMapperModule], tags=[], method=formMultipartServerRequestMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.BlockingRequestExecutor, module=MixedInModule[element=ru.tinkoff.kora.http.server.undertow.UndertowHttpServerModule], tags=[], method=undertowBlockingRequestExecutor(org.xnio.XnioWorker), methodParameterTypes=[org.xnio.XnioWorker], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.HttpServerRequestMapper<byte[]>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerRequestMapperModule], tags=[], method=byteArrayRequestMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.HttpServerRequestMapper<java.io.InputStream>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerRequestMapperModule], tags=[], method=inputStreamRequestMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.HttpServerRequestMapper<java.lang.String>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerRequestMapperModule], tags=[], method=stringRequestMapper(ru.tinkoff.kora.http.server.common.handler.HttpServerRequestMapper<byte[]>), methodParameterTypes=[ru.tinkoff.kora.http.server.common.handler.HttpServerRequestMapper<byte[]>], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.HttpServerRequestMapper<java.nio.ByteBuffer>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerRequestMapperModule], tags=[], method=byteBufBodyRequestMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.HttpServerRequestMapper<java.util.concurrent.CompletionStage<byte[]>>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerRequestMapperModule], tags=[], method=byteArrayAsyncRequestMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.HttpServerRequestMapper<java.util.concurrent.CompletionStage<java.lang.String>>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerRequestMapperModule], tags=[], method=stringAsyncRequestMapper(ru.tinkoff.kora.http.server.common.handler.HttpServerRequestMapper<java.util.concurrent.CompletionStage<byte[]>>), methodParameterTypes=[ru.tinkoff.kora.http.server.common.handler.HttpServerRequestMapper<java.util.concurrent.CompletionStage<byte[]>>], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.HttpServerRequestMapper<java.util.concurrent.CompletionStage<java.nio.ByteBuffer>>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerRequestMapperModule], tags=[], method=byteBufAsyncBodyRequestMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.HttpServerRequestMapper<java.util.concurrent.CompletionStage<java.util.concurrent.Flow.Publisher<java.nio.ByteBuffer>>>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerRequestMapperModule], tags=[], method=byteBufferPublisherAsyncRequestMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.HttpServerRequestMapper<java.util.concurrent.CompletionStage<ru.tinkoff.kora.http.common.form.FormUrlEncoded>>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerRequestMapperModule], tags=[], method=formUrlEncodedAsyncServerRequestMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.HttpServerRequestMapper<java.util.concurrent.CompletionStage<ru.tinkoff.kora.http.server.common.HttpServerRequest>>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerRequestMapperModule], tags=[], method=noopAsyncRequestMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.HttpServerRequestMapper<java.util.concurrent.Flow.Publisher<java.nio.ByteBuffer>>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerRequestMapperModule], tags=[], method=byteBufferPublisherRequestMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.HttpServerRequestMapper<ru.tinkoff.kora.http.common.form.FormUrlEncoded>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerRequestMapperModule], tags=[], method=formUrlEncoderHttpServerRequestMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.HttpServerRequestMapper<ru.tinkoff.kora.http.server.common.HttpServerRequest>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerRequestMapperModule], tags=[], method=noopRequestMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.HttpServerResponseMapper<byte[]>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerResponseMapperModule], tags=[], method=byteArrayResponseMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.HttpServerResponseMapper<java.lang.String>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerResponseMapperModule], tags=[], method=stringResponseMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.HttpServerResponseMapper<java.nio.ByteBuffer>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerResponseMapperModule], tags=[], method=byteBufBodyResponseMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.HttpServerResponseMapper<ru.tinkoff.kora.http.common.HttpResponseEntity<T>>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerResponseMapperModule], tags=[], method=<T>httpServerResponseEntityMapper(ru.tinkoff.kora.http.server.common.handler.HttpServerResponseMapper<T>), methodParameterTypes=[ru.tinkoff.kora.http.server.common.handler.HttpServerResponseMapper<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.HttpServerResponseMapper<ru.tinkoff.kora.http.server.common.HttpServerResponse>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerResponseMapperModule], tags=[], method=noopResponseMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.StringParameterReader<T>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.StringParameterReadersModule], tags=[], method=<T>enumStringParameterReader(ru.tinkoff.kora.application.graph.TypeRef<T>), methodParameterTypes=[ru.tinkoff.kora.application.graph.TypeRef<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.StringParameterReader<java.lang.Boolean>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.StringParameterReadersModule], tags=[], method=javaUtilBooleanStringParameterReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.StringParameterReader<java.lang.Double>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.StringParameterReadersModule], tags=[], method=javaUtilDoubleStringParameterReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.StringParameterReader<java.lang.Float>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.StringParameterReadersModule], tags=[], method=javaUtilFloatStringParameterReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.StringParameterReader<java.lang.Integer>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.StringParameterReadersModule], tags=[], method=javaUtilIntegerStringParameterReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.StringParameterReader<java.lang.Long>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.StringParameterReadersModule], tags=[], method=javaUtilLongStringParameterReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.StringParameterReader<java.time.LocalDate>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.StringParameterReadersModule], tags=[], method=javaTimeLocalDateStringParameterReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.StringParameterReader<java.time.LocalDateTime>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.StringParameterReadersModule], tags=[], method=javaTimeLocalDateTimeStringParameterReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.StringParameterReader<java.time.LocalTime>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.StringParameterReadersModule], tags=[], method=javaTimeLocalTimeStringParameterReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.StringParameterReader<java.time.OffsetDateTime>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.StringParameterReadersModule], tags=[], method=javaTimeOffsetDateTimeStringParameterReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.StringParameterReader<java.time.OffsetTime>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.StringParameterReadersModule], tags=[], method=javaTimeOffsetTimeStringParameterReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.StringParameterReader<java.time.ZonedDateTime>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.StringParameterReadersModule], tags=[], method=javaTimeZonedDateTimeStringParameterReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.StringParameterReader<java.util.UUID>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.StringParameterReadersModule], tags=[], method=javaUtilUUIDStringParameterReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.router.PublicApiHandler, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerModule], tags=[], method=publicApiHandler(ru.tinkoff.kora.application.graph.All<ru.tinkoff.kora.http.server.common.handler.HttpServerRequestHandler>,ru.tinkoff.kora.application.graph.All<ru.tinkoff.kora.http.server.common.HttpServerInterceptor>,ru.tinkoff.kora.http.server.common.telemetry.HttpServerTelemetryFactory,ru.tinkoff.kora.http.server.common.HttpServerConfig), methodParameterTypes=[ru.tinkoff.kora.application.graph.All<ru.tinkoff.kora.http.server.common.handler.HttpServerRequestHandler>, ru.tinkoff.kora.application.graph.All<ru.tinkoff.kora.http.server.common.HttpServerInterceptor>, ru.tinkoff.kora.http.server.common.telemetry.HttpServerTelemetryFactory, ru.tinkoff.kora.http.server.common.HttpServerConfig], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.telemetry.DefaultHttpServerTelemetryFactory, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerModule], tags=[], method=defaultHttpServerTelemetryFactory(ru.tinkoff.kora.http.server.common.telemetry.HttpServerLoggerFactory,ru.tinkoff.kora.http.server.common.telemetry.HttpServerMetricsFactory,ru.tinkoff.kora.http.server.common.telemetry.HttpServerTracerFactory), methodParameterTypes=[ru.tinkoff.kora.http.server.common.telemetry.HttpServerLoggerFactory, ru.tinkoff.kora.http.server.common.telemetry.HttpServerMetricsFactory, ru.tinkoff.kora.http.server.common.telemetry.HttpServerTracerFactory], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.telemetry.Slf4jHttpServerLoggerFactory, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerModule], tags=[], method=slf4jHttpServerLoggerFactory(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.undertow.UndertowHttpServer, module=MixedInModule[element=ru.tinkoff.kora.http.server.undertow.UndertowHttpServerModule], tags=[], method=undertowHttpServer(ru.tinkoff.kora.application.graph.ValueOf<ru.tinkoff.kora.http.server.common.HttpServerConfig>,ru.tinkoff.kora.application.graph.ValueOf<ru.tinkoff.kora.http.server.undertow.UndertowPublicApiHandler>,org.xnio.XnioWorker), methodParameterTypes=[ru.tinkoff.kora.application.graph.ValueOf<ru.tinkoff.kora.http.server.common.HttpServerConfig>, ru.tinkoff.kora.application.graph.ValueOf<ru.tinkoff.kora.http.server.undertow.UndertowPublicApiHandler>, org.xnio.XnioWorker], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.undertow.UndertowPrivateApiHandler, module=MixedInModule[element=ru.tinkoff.kora.http.server.undertow.UndertowModule], tags=[], method=undertowPrivateApiHandler(ru.tinkoff.kora.http.server.common.PrivateApiHandler), methodParameterTypes=[ru.tinkoff.kora.http.server.common.PrivateApiHandler], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.undertow.UndertowPrivateHttpServer, module=MixedInModule[element=ru.tinkoff.kora.http.server.undertow.UndertowModule], tags=[], method=undertowPrivateHttpServer(ru.tinkoff.kora.application.graph.ValueOf<ru.tinkoff.kora.http.server.common.HttpServerConfig>,ru.tinkoff.kora.application.graph.ValueOf<ru.tinkoff.kora.http.server.undertow.UndertowPrivateApiHandler>,org.xnio.XnioWorker), methodParameterTypes=[ru.tinkoff.kora.application.graph.ValueOf<ru.tinkoff.kora.http.server.common.HttpServerConfig>, ru.tinkoff.kora.application.graph.ValueOf<ru.tinkoff.kora.http.server.undertow.UndertowPrivateApiHandler>, org.xnio.XnioWorker], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.undertow.UndertowPublicApiHandler, module=MixedInModule[element=ru.tinkoff.kora.http.server.undertow.UndertowHttpServerModule], tags=[], method=undertowPublicApiHandler(ru.tinkoff.kora.http.server.common.router.PublicApiHandler,ru.tinkoff.kora.http.server.common.telemetry.HttpServerTracerFactory,ru.tinkoff.kora.http.server.common.HttpServerConfig), methodParameterTypes=[ru.tinkoff.kora.http.server.common.router.PublicApiHandler, ru.tinkoff.kora.http.server.common.telemetry.HttpServerTracerFactory, ru.tinkoff.kora.http.server.common.HttpServerConfig], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.lang.Boolean>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=booleanJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.lang.Double>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=doubleJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.lang.Integer>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=integerJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.lang.Long>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=longJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.lang.Object>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=objectJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.lang.String>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=stringJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.math.BigDecimal>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=bigDecimalJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.math.BigInteger>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=bigIntegerJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.time.DayOfWeek>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=dayOfWeekJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.time.Duration>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=durationJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.time.Instant>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=instantJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.time.LocalDate>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=localDateJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.time.LocalDateTime>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=localDateTimeJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.time.LocalTime>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=localTimeJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.time.Month>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=monthJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.time.MonthDay>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=monthDayJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.time.OffsetDateTime>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=offsetDateTimeJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.time.OffsetTime>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=offsetTimeJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.time.Year>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=yearJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.time.YearMonth>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=yearMonthJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.time.ZoneId>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=zoneIdJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.time.ZonedDateTime>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=zonedDateTimeJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.util.List<T>>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=<T>listJsonReaderFactory(ru.tinkoff.kora.json.common.JsonReader<T>), methodParameterTypes=[ru.tinkoff.kora.json.common.JsonReader<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.util.Map<java.lang.String,T>>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=<T>mapJsonReaderFactory(ru.tinkoff.kora.json.common.JsonReader<T>), methodParameterTypes=[ru.tinkoff.kora.json.common.JsonReader<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.util.Set<T>>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=<T>setJsonReaderFactory(ru.tinkoff.kora.json.common.JsonReader<T>), methodParameterTypes=[ru.tinkoff.kora.json.common.JsonReader<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.util.SortedSet<T>>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=<T>sortedSetJsonReaderFactory(ru.tinkoff.kora.json.common.JsonReader<T>), methodParameterTypes=[ru.tinkoff.kora.json.common.JsonReader<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.util.UUID>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=uuidJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.lang.Boolean>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=booleanJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.lang.Double>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=doubleJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.lang.Integer>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=integerJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.lang.Long>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=longJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.lang.Object>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=objectJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.lang.String>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=stringJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.math.BigDecimal>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=bigDecimalJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.math.BigInteger>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=bigIntegerJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.time.DayOfWeek>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=dayOfWeekJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.time.Duration>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=durationJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.time.Instant>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=instantJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.time.LocalDate>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=localDateJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.time.LocalDateTime>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=localDateTimeJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.time.LocalTime>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=localTimeJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.time.Month>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=monthJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.time.MonthDay>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=monthDayJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.time.OffsetDateTime>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=offsetDateTimeJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.time.OffsetTime>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=offsetTimeJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.time.Year>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=yearJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.time.YearMonth>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=yearMonthJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.time.ZoneId>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=zoneIdJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.time.ZonedDateTime>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=zonedDateTimeJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.util.List<T>>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=<T>listJsonWriterFactory(ru.tinkoff.kora.json.common.JsonWriter<T>), methodParameterTypes=[ru.tinkoff.kora.json.common.JsonWriter<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.util.Map<java.lang.String,T>>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=<T>mapJsonWriterFactory(ru.tinkoff.kora.json.common.JsonWriter<T>), methodParameterTypes=[ru.tinkoff.kora.json.common.JsonWriter<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.util.Set<T>>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=<T>setJsonWriterFactory(ru.tinkoff.kora.json.common.JsonWriter<T>), methodParameterTypes=[ru.tinkoff.kora.json.common.JsonWriter<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.util.UUID>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=uuidJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<ru.tinkoff.kora.json.common.RawJson>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=rawJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.module.http.client.JsonAsyncHttpClientResponseMapper<T>, module=MixedInModule[element=ru.tinkoff.kora.json.module.JsonModule], tags=[ru.tinkoff.kora.json.common.annotation.Json], method=<T>jsonAsyncHttpClientResponseMapper(ru.tinkoff.kora.json.common.JsonReader<T>), methodParameterTypes=[ru.tinkoff.kora.json.common.JsonReader<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.module.http.client.JsonHttpClientRequestMapper<T>, module=MixedInModule[element=ru.tinkoff.kora.json.module.JsonModule], tags=[ru.tinkoff.kora.json.common.annotation.Json], method=<T>jsonHttpClientRequestMapper(ru.tinkoff.kora.json.common.JsonWriter<T>), methodParameterTypes=[ru.tinkoff.kora.json.common.JsonWriter<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.module.http.client.JsonHttpClientResponseMapper<T>, module=MixedInModule[element=ru.tinkoff.kora.json.module.JsonModule], tags=[ru.tinkoff.kora.json.common.annotation.Json], method=<T>jsonHttpClientResponseMapper(ru.tinkoff.kora.json.common.JsonReader<T>), methodParameterTypes=[ru.tinkoff.kora.json.common.JsonReader<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.module.http.client.JsonReaderAsyncHttpClientResponseEntityMapper<T>, module=MixedInModule[element=ru.tinkoff.kora.json.module.JsonModule], tags=[ru.tinkoff.kora.json.common.annotation.Json], method=<T>jsonReaderAsyncHttpClientResponseEntityMapper(ru.tinkoff.kora.json.common.JsonReader<T>), methodParameterTypes=[ru.tinkoff.kora.json.common.JsonReader<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.module.http.client.JsonReaderHttpClientResponseEntityMapper<T>, module=MixedInModule[element=ru.tinkoff.kora.json.module.JsonModule], tags=[ru.tinkoff.kora.json.common.annotation.Json], method=<T>jsonReaderHttpClientResponseEntityMapper(ru.tinkoff.kora.json.common.JsonReader<T>), methodParameterTypes=[ru.tinkoff.kora.json.common.JsonReader<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.module.http.client.JsonStringParameterConverter<T>, module=MixedInModule[element=ru.tinkoff.kora.json.module.JsonModule], tags=[ru.tinkoff.kora.json.common.annotation.Json], method=<T>jsonStringParameterConverter(ru.tinkoff.kora.json.common.JsonWriter<T>), methodParameterTypes=[ru.tinkoff.kora.json.common.JsonWriter<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.module.http.server.JsonReaderAsyncHttpServerRequestMapper<T>, module=MixedInModule[element=ru.tinkoff.kora.json.module.JsonModule], tags=[ru.tinkoff.kora.json.common.annotation.Json], method=<T>jsonReaderAsyncHttpServerRequestMapper(ru.tinkoff.kora.json.common.JsonReader<T>), methodParameterTypes=[ru.tinkoff.kora.json.common.JsonReader<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.module.http.server.JsonReaderHttpServerRequestMapper<T>, module=MixedInModule[element=ru.tinkoff.kora.json.module.JsonModule], tags=[ru.tinkoff.kora.json.common.annotation.Json], method=<T>jsonRequestMapper(ru.tinkoff.kora.json.common.JsonReader<T>), methodParameterTypes=[ru.tinkoff.kora.json.common.JsonReader<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.module.http.server.JsonStringParameterReader<T>, module=MixedInModule[element=ru.tinkoff.kora.json.module.JsonModule], tags=[ru.tinkoff.kora.json.common.annotation.Json], method=<T>jsonStringParameterReader(ru.tinkoff.kora.json.common.JsonReader<T>), methodParameterTypes=[ru.tinkoff.kora.json.common.JsonReader<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.module.http.server.JsonWriterHttpServerEntityResponseMapper<T>, module=MixedInModule[element=ru.tinkoff.kora.json.module.JsonModule], tags=[ru.tinkoff.kora.json.common.annotation.Json], method=<T>jsonResponseEntityMapper(ru.tinkoff.kora.json.common.JsonWriter<T>), methodParameterTypes=[ru.tinkoff.kora.json.common.JsonWriter<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.module.http.server.JsonWriterHttpServerResponseMapper<T>, module=MixedInModule[element=ru.tinkoff.kora.json.module.JsonModule], tags=[ru.tinkoff.kora.json.common.annotation.Json], method=<T>jsonResponseMapper(ru.tinkoff.kora.json.common.JsonWriter<T>), methodParameterTypes=[ru.tinkoff.kora.json.common.JsonWriter<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.module.kafka.JsonKafkaDeserializer<T>, module=MixedInModule[element=ru.tinkoff.kora.json.module.JsonModule], tags=[ru.tinkoff.kora.json.common.annotation.Json], method=<T>jsonKafkaDeserializer(ru.tinkoff.kora.json.common.JsonReader<T>), methodParameterTypes=[ru.tinkoff.kora.json.common.JsonReader<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.module.kafka.JsonKafkaSerializer<T>, module=MixedInModule[element=ru.tinkoff.kora.json.module.JsonModule], tags=[ru.tinkoff.kora.json.common.annotation.Json], method=<T>jsonKafkaSerializer(ru.tinkoff.kora.json.common.JsonWriter<T>), methodParameterTypes=[ru.tinkoff.kora.json.common.JsonWriter<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.micrometer.module.PrometheusMeterRegistryWrapper, module=MixedInModule[element=ru.tinkoff.kora.micrometer.module.MetricsModule], tags=[], method=prometheusMeterRegistry(ru.tinkoff.kora.application.graph.All<ru.tinkoff.kora.micrometer.module.PrometheusMeterRegistryInitializer>), methodParameterTypes=[ru.tinkoff.kora.application.graph.All<ru.tinkoff.kora.micrometer.module.PrometheusMeterRegistryInitializer>], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.micrometer.module.cache.MicrometerCacheMetrics, module=MixedInModule[element=ru.tinkoff.kora.micrometer.module.MetricsModule], tags=[], method=micrometerCacheMetrics(io.micrometer.core.instrument.MeterRegistry), methodParameterTypes=[io.micrometer.core.instrument.MeterRegistry], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.micrometer.module.cache.caffeine.MicrometerCaffeineCacheMetricCollector, module=MixedInModule[element=ru.tinkoff.kora.micrometer.module.MetricsModule], tags=[], method=caffeineCacheMetricsCollector(io.micrometer.core.instrument.MeterRegistry), methodParameterTypes=[io.micrometer.core.instrument.MeterRegistry], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.micrometer.module.db.MicrometerDataBaseMetricWriterFactory, module=MixedInModule[element=ru.tinkoff.kora.micrometer.module.MetricsModule], tags=[], method=micrometerDataBaseMetricWriterFactory(io.micrometer.core.instrument.MeterRegistry), methodParameterTypes=[io.micrometer.core.instrument.MeterRegistry], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.micrometer.module.grpc.client.MicrometerGrpcClientMetricsFactory, module=MixedInModule[element=ru.tinkoff.kora.micrometer.module.MetricsModule], tags=[], method=micrometerGrpcClientMetricsFactory(io.micrometer.core.instrument.MeterRegistry), methodParameterTypes=[io.micrometer.core.instrument.MeterRegistry], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.micrometer.module.grpc.server.MicrometerGrpcServerMetricsFactory, module=MixedInModule[element=ru.tinkoff.kora.micrometer.module.MetricsModule], tags=[], method=micrometerGrpcServerMetricsFactory(io.micrometer.core.instrument.MeterRegistry), methodParameterTypes=[io.micrometer.core.instrument.MeterRegistry], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.micrometer.module.http.client.MicrometerHttpClientMetricsFactory, module=MixedInModule[element=ru.tinkoff.kora.micrometer.module.MetricsModule], tags=[], method=micrometerHttpClientMetricsFactory(io.micrometer.core.instrument.MeterRegistry), methodParameterTypes=[io.micrometer.core.instrument.MeterRegistry], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.micrometer.module.http.server.MicrometerHttpServerMetricsFactory, module=MixedInModule[element=ru.tinkoff.kora.micrometer.module.MetricsModule], tags=[], method=micrometerHttpServerMetricsFactory(io.micrometer.core.instrument.MeterRegistry,ru.tinkoff.kora.micrometer.module.http.server.tag.MicrometerHttpServerTagsProvider), methodParameterTypes=[io.micrometer.core.instrument.MeterRegistry, ru.tinkoff.kora.micrometer.module.http.server.tag.MicrometerHttpServerTagsProvider], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.micrometer.module.http.server.MicrometerPrivateApiMetrics, module=MixedInModule[element=ru.tinkoff.kora.micrometer.module.MetricsModule], tags=[], method=micrometerPrivateApiMetrics(io.micrometer.prometheus.PrometheusMeterRegistry), methodParameterTypes=[io.micrometer.prometheus.PrometheusMeterRegistry], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.micrometer.module.http.server.tag.MicrometerHttpServerTagsProvider, module=MixedInModule[element=ru.tinkoff.kora.micrometer.module.MetricsModule], tags=[], method=micrometerHttpServerTagsProvider(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.micrometer.module.jms.consumer.MicrometerJmsConsumerMetricsFactory, module=MixedInModule[element=ru.tinkoff.kora.micrometer.module.MetricsModule], tags=[], method=micrometerJmsConsumerMetricsFactory(io.micrometer.core.instrument.MeterRegistry), methodParameterTypes=[io.micrometer.core.instrument.MeterRegistry], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.micrometer.module.kafka.consumer.MicrometerKafkaConsumerMetricsFactory, module=MixedInModule[element=ru.tinkoff.kora.micrometer.module.MetricsModule], tags=[], method=micrometerKafkaConsumerMetricsFactory(io.micrometer.core.instrument.MeterRegistry), methodParameterTypes=[io.micrometer.core.instrument.MeterRegistry], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.micrometer.module.kafka.producer.MicrometerKafkaProducerMetricsFactory, module=MixedInModule[element=ru.tinkoff.kora.micrometer.module.MetricsModule], tags=[], method=micrometerKafkaProducerMetricsFactory(io.micrometer.core.instrument.MeterRegistry), methodParameterTypes=[io.micrometer.core.instrument.MeterRegistry], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.micrometer.module.resilient.MicrometerCircuitBreakerMetrics, module=MixedInModule[element=ru.tinkoff.kora.micrometer.module.MetricsModule], tags=[], method=micrometerCircuitBreakerMetrics(io.micrometer.core.instrument.MeterRegistry), methodParameterTypes=[io.micrometer.core.instrument.MeterRegistry], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.micrometer.module.resilient.MicrometerFallbackMetrics, module=MixedInModule[element=ru.tinkoff.kora.micrometer.module.MetricsModule], tags=[], method=micrometerFallbackMetrics(io.micrometer.core.instrument.MeterRegistry), methodParameterTypes=[io.micrometer.core.instrument.MeterRegistry], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.micrometer.module.resilient.MicrometerRetryMetrics, module=MixedInModule[element=ru.tinkoff.kora.micrometer.module.MetricsModule], tags=[], method=micrometerRetryMetrics(io.micrometer.core.instrument.MeterRegistry), methodParameterTypes=[io.micrometer.core.instrument.MeterRegistry], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.micrometer.module.resilient.MicrometerTimeoutMetrics, module=MixedInModule[element=ru.tinkoff.kora.micrometer.module.MetricsModule], tags=[], method=micrometerTimeoutMetrics(io.micrometer.core.instrument.MeterRegistry), methodParameterTypes=[io.micrometer.core.instrument.MeterRegistry], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.micrometer.module.scheduling.MicrometerSchedulingMetricsFactory, module=MixedInModule[element=ru.tinkoff.kora.micrometer.module.MetricsModule], tags=[], method=micrometerSchedulingMetricsFactory(io.micrometer.core.instrument.MeterRegistry), methodParameterTypes=[io.micrometer.core.instrument.MeterRegistry], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.micrometer.module.soap.client.MicrometerSoapClientMetricsFactory, module=MixedInModule[element=ru.tinkoff.kora.micrometer.module.MetricsModule], tags=[], method=micrometerSoapClientMetricsFactory(io.micrometer.core.instrument.MeterRegistry), methodParameterTypes=[io.micrometer.core.instrument.MeterRegistry], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.scheduling.common.telemetry.DefaultSchedulingTelemetryFactory, module=MixedInModule[element=ru.tinkoff.kora.scheduling.common.SchedulingModule], tags=[], method=defaultSchedulingTelemetryFactory(ru.tinkoff.kora.telemetry.common.TelemetryConfig,ru.tinkoff.kora.scheduling.common.telemetry.SchedulingMetricsFactory,ru.tinkoff.kora.scheduling.common.telemetry.SchedulingTracerFactory,ru.tinkoff.kora.scheduling.common.telemetry.SchedulingLoggerFactory), methodParameterTypes=[ru.tinkoff.kora.telemetry.common.TelemetryConfig, ru.tinkoff.kora.scheduling.common.telemetry.SchedulingMetricsFactory, ru.tinkoff.kora.scheduling.common.telemetry.SchedulingTracerFactory, ru.tinkoff.kora.scheduling.common.telemetry.SchedulingLoggerFactory], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.scheduling.jdk.JdkSchedulingExecutor, module=MixedInModule[element=ru.tinkoff.kora.scheduling.jdk.SchedulingJdkModule], tags=[], method=scheduledExecutorServiceLifecycle(ru.tinkoff.kora.scheduling.jdk.ScheduledExecutorServiceConfig), methodParameterTypes=[ru.tinkoff.kora.scheduling.jdk.ScheduledExecutorServiceConfig], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.scheduling.jdk.ScheduledExecutorServiceConfig, module=MixedInModule[element=ru.tinkoff.kora.scheduling.jdk.SchedulingJdkModule], tags=[], method=scheduledExecutorServiceConfig(ru.tinkoff.kora.config.common.Config,ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<ru.tinkoff.kora.scheduling.jdk.ScheduledExecutorServiceConfig>), methodParameterTypes=[ru.tinkoff.kora.config.common.Config, ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<ru.tinkoff.kora.scheduling.jdk.ScheduledExecutorServiceConfig>], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.telemetry.common.TelemetryConfig, module=MixedInModule[element=ru.tinkoff.kora.scheduling.common.SchedulingModule], tags=[ru.tinkoff.kora.scheduling.common.SchedulingModule], method=defaultSchedulingConfig(ru.tinkoff.kora.config.common.Config,ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<ru.tinkoff.kora.telemetry.common.TelemetryConfig>), methodParameterTypes=[ru.tinkoff.kora.config.common.Config, ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<ru.tinkoff.kora.telemetry.common.TelemetryConfig>], typeVariables=[], isInterceptor=false]

2023-12-10 22:04:17.351 [Execution worker] DEBUG ru.tinkoff.kora.aop.annotation.processor.AopAnnotationProcessor  Discovered aspects:
	ru.tinkoff.kora.validation.annotation.processor.aop.ValidateMethodKoraAspect
	ru.tinkoff.kora.resilient.annotation.processor.aop.CircuitBreakerKoraAspect
	ru.tinkoff.kora.resilient.annotation.processor.aop.RetryKoraAspect
	ru.tinkoff.kora.resilient.annotation.processor.aop.TimeoutKoraAspect
	ru.tinkoff.kora.resilient.annotation.processor.aop.FallbackKoraAspect
	ru.tinkoff.kora.cache.annotation.processor.aop.CacheableAopKoraAspect
	ru.tinkoff.kora.cache.annotation.processor.aop.CacheInvalidateAopKoraAspect
	ru.tinkoff.kora.cache.annotation.processor.aop.CachePutAopKoraAspect
	ru.tinkoff.kora.logging.aspect.LogAspect
2023-12-10 22:04:17.408 [Execution worker] INFO  ru.tinkoff.kora.config.annotation.processor.ConfigParserGenerator  Generating ConfigValueExtractor for org.example.client.$OncallAuthClient_Config
2023-12-10 22:04:17.416 [Execution worker] INFO  ru.tinkoff.kora.config.annotation.processor.ConfigParserGenerator  Generating ConfigValueExtractor for org.example.client.$OncallClient_Config
2023-12-10 22:04:17.425 [Execution worker] INFO  ru.tinkoff.kora.kora.app.annotation.processor.KoraAppProcessor  Generated previous Round:
    org.example.config.OncallUserConfigModule
    org.example.config.$OncallUserConfig_ConfigValueExtractor
    org.example.client.$OncallAuthClient_Module
    org.example.client.$OncallAuthClient_ClientImpl
    org.example.client.$OncallClient_Module
    org.example.client.$OncallClient_ClientImpl

2023-12-10 22:04:17.425 [Execution worker] INFO  ru.tinkoff.kora.kora.app.annotation.processor.KoraAppProcessor  Module found: org.example.config.OncallUserConfigModule
2023-12-10 22:04:17.425 [Execution worker] INFO  ru.tinkoff.kora.kora.app.annotation.processor.KoraAppProcessor  Module found: org.example.controller.TestControllerModule
2023-12-10 22:04:17.425 [Execution worker] INFO  ru.tinkoff.kora.kora.app.annotation.processor.KoraAppProcessor  Module found: org.example.client.$OncallAuthClient_Module
2023-12-10 22:04:17.425 [Execution worker] INFO  ru.tinkoff.kora.kora.app.annotation.processor.KoraAppProcessor  Module found: org.example.client.$OncallClient_Module
2023-12-10 22:04:17.425 [Execution worker] INFO  ru.tinkoff.kora.kora.app.annotation.processor.KoraAppProcessor  Module found: org.example.scheduled.$OncallProber_SchedulingModule
2023-12-10 22:04:17.425 [Execution worker] INFO  ru.tinkoff.kora.kora.app.annotation.processor.KoraAppProcessor  Effective modules of org.example.Application:
    org.example.Application
    org.example.client.$OncallAuthClient_Module
    org.example.client.$OncallClient_Module
    org.example.config.OncallUserConfigModule
    org.example.controller.TestControllerModule
    org.example.scheduled.$OncallProber_SchedulingModule
    ru.tinkoff.kora.config.common.CommonConfigModule
    ru.tinkoff.kora.config.common.DefaultConfigExtractorsModule
    ru.tinkoff.kora.config.hocon.HoconConfigModule
    ru.tinkoff.kora.http.client.async.AsyncHttpClientModule
    ru.tinkoff.kora.http.client.common.HttpClientModule
    ru.tinkoff.kora.http.client.common.ParameterConvertersModule
    ru.tinkoff.kora.http.client.common.request.HttpClientRequestMapperModule
    ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapperModule
    ru.tinkoff.kora.http.server.common.HttpServerModule
    ru.tinkoff.kora.http.server.common.HttpServerRequestMapperModule
    ru.tinkoff.kora.http.server.common.HttpServerResponseMapperModule
    ru.tinkoff.kora.http.server.common.StringParameterReadersModule
    ru.tinkoff.kora.http.server.undertow.UndertowHttpServerModule
    ru.tinkoff.kora.http.server.undertow.UndertowModule
    ru.tinkoff.kora.json.common.JsonCommonModule
    ru.tinkoff.kora.json.module.JsonModule
    ru.tinkoff.kora.micrometer.module.MetricsModule
    ru.tinkoff.kora.netty.common.NettyCommonModule
    ru.tinkoff.kora.scheduling.common.SchedulingModule
    ru.tinkoff.kora.scheduling.jdk.SchedulingJdkModule

2023-12-10 22:04:17.427 [Execution worker] INFO  ru.tinkoff.kora.kora.app.annotation.processor.KoraAppProcessor  Effective methods of org.example.Application:
    FromModuleComponent[type=com.typesafe.config.Config, module=MixedInModule[element=ru.tinkoff.kora.config.hocon.HoconConfigModule], tags=[], method=hoconConfig(com.typesafe.config.Config), methodParameterTypes=[com.typesafe.config.Config], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=com.typesafe.config.Config, module=MixedInModule[element=ru.tinkoff.kora.config.hocon.HoconConfigModule], tags=[ru.tinkoff.kora.config.common.annotation.ApplicationConfig], method=applicationUnresolved(ru.tinkoff.kora.config.common.origin.ConfigOrigin), methodParameterTypes=[ru.tinkoff.kora.config.common.origin.ConfigOrigin], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=org.asynchttpclient.AsyncHttpClient, module=MixedInModule[element=ru.tinkoff.kora.http.client.async.AsyncHttpClientModule], tags=[], method=nettyAsyncHttpClient(org.asynchttpclient.AsyncHttpClientConfig), methodParameterTypes=[org.asynchttpclient.AsyncHttpClientConfig], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=org.asynchttpclient.AsyncHttpClientConfig, module=MixedInModule[element=ru.tinkoff.kora.http.client.async.AsyncHttpClientModule], tags=[], method=nettyClientConfig(io.netty.channel.EventLoopGroup,ru.tinkoff.kora.http.client.common.HttpClientConfig), methodParameterTypes=[io.netty.channel.EventLoopGroup, ru.tinkoff.kora.http.client.common.HttpClientConfig], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.application.graph.LifecycleWrapper<io.netty.channel.EventLoopGroup>, module=MixedInModule[element=ru.tinkoff.kora.netty.common.NettyCommonModule], tags=[ru.tinkoff.kora.netty.common.NettyCommonModule.BossLoopGroup], method=nettyEventBossLoopGroupLifecycle(java.util.concurrent.ThreadFactory), methodParameterTypes=[java.util.concurrent.ThreadFactory], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.application.graph.LifecycleWrapper<io.netty.channel.EventLoopGroup>, module=MixedInModule[element=ru.tinkoff.kora.netty.common.NettyCommonModule], tags=[ru.tinkoff.kora.netty.common.NettyCommonModule.WorkerLoopGroup], method=nettyEventLoopGroupLifecycle(java.util.concurrent.ThreadFactory,java.lang.Integer), methodParameterTypes=[java.util.concurrent.ThreadFactory, java.lang.Integer], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.application.graph.Wrapped<org.xnio.XnioWorker>, module=MixedInModule[element=ru.tinkoff.kora.http.server.undertow.UndertowModule], tags=[], method=xnioWorker(ru.tinkoff.kora.application.graph.ValueOf<ru.tinkoff.kora.http.server.common.HttpServerConfig>), methodParameterTypes=[ru.tinkoff.kora.application.graph.ValueOf<ru.tinkoff.kora.http.server.common.HttpServerConfig>], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.Config, module=MixedInModule[element=ru.tinkoff.kora.config.common.CommonConfigModule], tags=[], method=config(ru.tinkoff.kora.config.common.Config,ru.tinkoff.kora.config.common.Config,ru.tinkoff.kora.config.common.Config), methodParameterTypes=[ru.tinkoff.kora.config.common.Config, ru.tinkoff.kora.config.common.Config, ru.tinkoff.kora.config.common.Config], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.Config, module=MixedInModule[element=ru.tinkoff.kora.config.common.CommonConfigModule], tags=[ru.tinkoff.kora.config.common.annotation.Environment], method=environmentConfig(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.Config, module=MixedInModule[element=ru.tinkoff.kora.config.common.CommonConfigModule], tags=[ru.tinkoff.kora.config.common.annotation.SystemProperties], method=systemProperties(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.Config, module=MixedInModule[element=ru.tinkoff.kora.config.hocon.HoconConfigModule], tags=[ru.tinkoff.kora.config.common.annotation.ApplicationConfig], method=config(ru.tinkoff.kora.config.common.origin.ConfigOrigin,com.typesafe.config.Config), methodParameterTypes=[ru.tinkoff.kora.config.common.origin.ConfigOrigin, com.typesafe.config.Config], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.ConfigWatcher, module=MixedInModule[element=ru.tinkoff.kora.config.common.CommonConfigModule], tags=[], method=configRefresher(java.util.Optional<ru.tinkoff.kora.application.graph.ValueOf<ru.tinkoff.kora.config.common.origin.ConfigOrigin>>), methodParameterTypes=[java.util.Optional<ru.tinkoff.kora.application.graph.ValueOf<ru.tinkoff.kora.config.common.origin.ConfigOrigin>>], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<double[]>, module=MixedInModule[element=ru.tinkoff.kora.config.common.DefaultConfigExtractorsModule], tags=[], method=doubleArrayConfigValueExtractor(ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<java.lang.Double>), methodParameterTypes=[ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<java.lang.Double>], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<java.lang.Boolean>, module=MixedInModule[element=ru.tinkoff.kora.config.common.DefaultConfigExtractorsModule], tags=[], method=booleanConfigValueExtractor(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<java.lang.Double>, module=MixedInModule[element=ru.tinkoff.kora.config.common.DefaultConfigExtractorsModule], tags=[], method=doubleConfigValueExtractor(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<java.lang.Float>, module=MixedInModule[element=ru.tinkoff.kora.config.common.DefaultConfigExtractorsModule], tags=[], method=floatConfigValueExtractor(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<java.lang.Integer>, module=MixedInModule[element=ru.tinkoff.kora.config.common.DefaultConfigExtractorsModule], tags=[], method=integerConfigValueExtractor(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<java.lang.Long>, module=MixedInModule[element=ru.tinkoff.kora.config.common.DefaultConfigExtractorsModule], tags=[], method=longConfigValueExtractor(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<java.lang.String>, module=MixedInModule[element=ru.tinkoff.kora.config.common.DefaultConfigExtractorsModule], tags=[], method=stringConfigValueExtractor(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<java.time.Duration>, module=MixedInModule[element=ru.tinkoff.kora.config.common.DefaultConfigExtractorsModule], tags=[], method=durationConfigValueExtractor(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<java.time.Period>, module=MixedInModule[element=ru.tinkoff.kora.config.common.DefaultConfigExtractorsModule], tags=[], method=periodConfigValueExtractor(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<java.util.List<T>>, module=MixedInModule[element=ru.tinkoff.kora.config.common.DefaultConfigExtractorsModule], tags=[], method=<T>listConfigValueExtractor(ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<T>), methodParameterTypes=[ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<java.util.Map<java.lang.String,T>>, module=MixedInModule[element=ru.tinkoff.kora.config.common.DefaultConfigExtractorsModule], tags=[], method=<T>mapConfigValueExtractor(ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<T>), methodParameterTypes=[ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<java.util.Properties>, module=MixedInModule[element=ru.tinkoff.kora.config.common.DefaultConfigExtractorsModule], tags=[], method=propertiesConfigValueExtractor(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<java.util.Set<T>>, module=MixedInModule[element=ru.tinkoff.kora.config.common.DefaultConfigExtractorsModule], tags=[], method=<T>setConfigValueExtractor(ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<T>), methodParameterTypes=[ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<java.util.UUID>, module=MixedInModule[element=ru.tinkoff.kora.config.common.DefaultConfigExtractorsModule], tags=[], method=uuidConfigValueExtractor(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<java.util.regex.Pattern>, module=MixedInModule[element=ru.tinkoff.kora.config.common.DefaultConfigExtractorsModule], tags=[], method=patternConfigValueExtractor(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<ru.tinkoff.kora.common.util.Either<A,B>>, module=MixedInModule[element=ru.tinkoff.kora.config.common.DefaultConfigExtractorsModule], tags=[], method=<A,B>eitherExtractor(ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<A>,ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<B>), methodParameterTypes=[ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<A>, ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<B>], typeVariables=[A, B], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<ru.tinkoff.kora.config.common.ConfigValue.ObjectValue>, module=MixedInModule[element=ru.tinkoff.kora.config.common.DefaultConfigExtractorsModule], tags=[], method=subconfigConfigValueExtractor(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.extractor.EnumConfigValueExtractor<T>, module=MixedInModule[element=ru.tinkoff.kora.config.common.DefaultConfigExtractorsModule], tags=[], method=<T>enumConfigValueExtractor(ru.tinkoff.kora.application.graph.TypeRef<T>), methodParameterTypes=[ru.tinkoff.kora.application.graph.TypeRef<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.extractor.OptionalConfigValueExtractor<T>, module=MixedInModule[element=ru.tinkoff.kora.config.common.DefaultConfigExtractorsModule], tags=[], method=<T>optionalConfigValueExtractor(ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<T>), methodParameterTypes=[ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.config.common.origin.ConfigOrigin, module=MixedInModule[element=ru.tinkoff.kora.config.hocon.HoconConfigModule], tags=[ru.tinkoff.kora.config.common.annotation.ApplicationConfig], method=applicationConfigOrigin(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.async.AsyncHttpClient, module=MixedInModule[element=ru.tinkoff.kora.http.client.async.AsyncHttpClientModule], tags=[], method=asyncHttpClient(org.asynchttpclient.AsyncHttpClient), methodParameterTypes=[org.asynchttpclient.AsyncHttpClient], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.HttpClientConfig, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.HttpClientModule], tags=[], method=httpClientConfig(ru.tinkoff.kora.config.common.Config,ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<ru.tinkoff.kora.http.client.common.HttpClientConfig>), methodParameterTypes=[ru.tinkoff.kora.config.common.Config, ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<ru.tinkoff.kora.http.client.common.HttpClientConfig>], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.form.FormMultipartClientRequestMapper, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.request.HttpClientRequestMapperModule], tags=[], method=formMultipartClientRequestMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.form.FormUrlEncodedClientRequestMapper, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.request.HttpClientRequestMapperModule], tags=[], method=formUrlEncodedClientRequestMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.request.HttpClientRequestMapper<byte[]>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.request.HttpClientRequestMapperModule], tags=[], method=byteArrayHttpClientRequestMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.request.HttpClientRequestMapper<java.lang.String>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.request.HttpClientRequestMapperModule], tags=[], method=stringHttpClientRequestMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.request.HttpClientRequestMapper<java.nio.ByteBuffer>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.request.HttpClientRequestMapperModule], tags=[], method=byteBufferHttpClientRequestMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.request.HttpClientRequestMapper<java.util.concurrent.Flow.Publisher<java.nio.ByteBuffer>>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.request.HttpClientRequestMapperModule], tags=[], method=byteBufferPublisherHttpClientRequestMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapper<byte[]>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapperModule], tags=[], method=byteArrayHttpClientResponseMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapper<java.lang.String>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapperModule], tags=[], method=stringHttpClientResponseMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapper<java.nio.ByteBuffer>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapperModule], tags=[], method=byteBufferHttpClientResponseMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapper<java.util.concurrent.CompletionStage<byte[]>>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapperModule], tags=[], method=byteArrayCompletionStageHttpClientResponseMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapper<java.util.concurrent.CompletionStage<java.lang.String>>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapperModule], tags=[], method=stringCompletionStageHttpClientResponseMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapper<java.util.concurrent.CompletionStage<java.nio.ByteBuffer>>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapperModule], tags=[], method=byteBufferCompletionStageHttpClientResponseMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapper<java.util.concurrent.CompletionStage<ru.tinkoff.kora.http.common.HttpResponseEntity<T>>>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapperModule], tags=[], method=<T>entityResponseCompletionStageHttpClientResponseMapper(ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapper<T>), methodParameterTypes=[ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapper<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapper<java.util.concurrent.Flow.Publisher<java.nio.ByteBuffer>>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapperModule], tags=[], method=byteBufferFluxHttpClientResponseMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapper<ru.tinkoff.kora.http.common.HttpResponseEntity<T>>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapperModule], tags=[], method=<T>entityResponseHttpClientResponseMapper(ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapper<T>), methodParameterTypes=[ru.tinkoff.kora.http.client.common.response.HttpClientResponseMapper<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.telemetry.DefaultHttpClientTelemetryFactory, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.HttpClientModule], tags=[], method=defaultHttpClientTelemetryFactory(ru.tinkoff.kora.http.client.common.telemetry.HttpClientLoggerFactory,ru.tinkoff.kora.http.client.common.telemetry.HttpClientTracerFactory,ru.tinkoff.kora.http.client.common.telemetry.HttpClientMetricsFactory), methodParameterTypes=[ru.tinkoff.kora.http.client.common.telemetry.HttpClientLoggerFactory, ru.tinkoff.kora.http.client.common.telemetry.HttpClientTracerFactory, ru.tinkoff.kora.http.client.common.telemetry.HttpClientMetricsFactory], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.telemetry.Sl4fjHttpClientLoggerFactory, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.HttpClientModule], tags=[], method=sl4fjHttpClientLoggerFactory(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.writer.StringParameterConverter<java.lang.Boolean>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.ParameterConvertersModule], tags=[], method=booleanConverter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.writer.StringParameterConverter<java.lang.Double>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.ParameterConvertersModule], tags=[], method=doubleConverter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.writer.StringParameterConverter<java.lang.Float>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.ParameterConvertersModule], tags=[], method=floatConverter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.writer.StringParameterConverter<java.lang.Integer>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.ParameterConvertersModule], tags=[], method=integerConverter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.writer.StringParameterConverter<java.lang.Long>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.ParameterConvertersModule], tags=[], method=longConverter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.writer.StringParameterConverter<java.time.LocalDate>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.ParameterConvertersModule], tags=[], method=javaTimeLocalDateStringParameterConverter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.writer.StringParameterConverter<java.time.LocalDateTime>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.ParameterConvertersModule], tags=[], method=javaTimeLocalDateTimeStringParameterConverter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.writer.StringParameterConverter<java.time.LocalTime>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.ParameterConvertersModule], tags=[], method=javaTimeLocalTimeStringParameterConverter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.writer.StringParameterConverter<java.time.OffsetDateTime>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.ParameterConvertersModule], tags=[], method=javaTimeOffsetDateTimeStringParameterConverter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.writer.StringParameterConverter<java.time.OffsetTime>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.ParameterConvertersModule], tags=[], method=javaTimeOffsetTimeStringParameterConverter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.writer.StringParameterConverter<java.time.ZonedDateTime>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.ParameterConvertersModule], tags=[], method=javaTimeZonedDateTimeStringParameterConverter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.client.common.writer.StringParameterConverter<java.util.UUID>, module=MixedInModule[element=ru.tinkoff.kora.http.client.common.ParameterConvertersModule], tags=[], method=uuidConverter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.HttpServerConfig, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerModule], tags=[], method=httpServerConfig(ru.tinkoff.kora.config.common.Config,ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<ru.tinkoff.kora.http.server.common.HttpServerConfig>), methodParameterTypes=[ru.tinkoff.kora.config.common.Config, ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<ru.tinkoff.kora.http.server.common.HttpServerConfig>], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.PrivateApiHandler, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerModule], tags=[], method=privateApiHandler(ru.tinkoff.kora.application.graph.ValueOf<ru.tinkoff.kora.http.server.common.HttpServerConfig>,ru.tinkoff.kora.application.graph.ValueOf<java.util.Optional<ru.tinkoff.kora.http.server.common.telemetry.PrivateApiMetrics>>,ru.tinkoff.kora.application.graph.All<ru.tinkoff.kora.application.graph.PromiseOf<ru.tinkoff.kora.common.readiness.ReadinessProbe>>,ru.tinkoff.kora.application.graph.All<ru.tinkoff.kora.application.graph.PromiseOf<ru.tinkoff.kora.common.liveness.LivenessProbe>>), methodParameterTypes=[ru.tinkoff.kora.application.graph.ValueOf<ru.tinkoff.kora.http.server.common.HttpServerConfig>, ru.tinkoff.kora.application.graph.ValueOf<java.util.Optional<ru.tinkoff.kora.http.server.common.telemetry.PrivateApiMetrics>>, ru.tinkoff.kora.application.graph.All<ru.tinkoff.kora.application.graph.PromiseOf<ru.tinkoff.kora.common.readiness.ReadinessProbe>>, ru.tinkoff.kora.application.graph.All<ru.tinkoff.kora.application.graph.PromiseOf<ru.tinkoff.kora.common.liveness.LivenessProbe>>], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.form.FormMultipartAsyncServerRequestMapper, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerRequestMapperModule], tags=[], method=formMultipartAsyncServerRequestMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.form.FormMultipartServerRequestMapper, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerRequestMapperModule], tags=[], method=formMultipartServerRequestMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.BlockingRequestExecutor, module=MixedInModule[element=ru.tinkoff.kora.http.server.undertow.UndertowHttpServerModule], tags=[], method=undertowBlockingRequestExecutor(org.xnio.XnioWorker), methodParameterTypes=[org.xnio.XnioWorker], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.HttpServerRequestMapper<byte[]>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerRequestMapperModule], tags=[], method=byteArrayRequestMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.HttpServerRequestMapper<java.io.InputStream>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerRequestMapperModule], tags=[], method=inputStreamRequestMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.HttpServerRequestMapper<java.lang.String>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerRequestMapperModule], tags=[], method=stringRequestMapper(ru.tinkoff.kora.http.server.common.handler.HttpServerRequestMapper<byte[]>), methodParameterTypes=[ru.tinkoff.kora.http.server.common.handler.HttpServerRequestMapper<byte[]>], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.HttpServerRequestMapper<java.nio.ByteBuffer>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerRequestMapperModule], tags=[], method=byteBufBodyRequestMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.HttpServerRequestMapper<java.util.concurrent.CompletionStage<byte[]>>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerRequestMapperModule], tags=[], method=byteArrayAsyncRequestMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.HttpServerRequestMapper<java.util.concurrent.CompletionStage<java.lang.String>>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerRequestMapperModule], tags=[], method=stringAsyncRequestMapper(ru.tinkoff.kora.http.server.common.handler.HttpServerRequestMapper<java.util.concurrent.CompletionStage<byte[]>>), methodParameterTypes=[ru.tinkoff.kora.http.server.common.handler.HttpServerRequestMapper<java.util.concurrent.CompletionStage<byte[]>>], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.HttpServerRequestMapper<java.util.concurrent.CompletionStage<java.nio.ByteBuffer>>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerRequestMapperModule], tags=[], method=byteBufAsyncBodyRequestMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.HttpServerRequestMapper<java.util.concurrent.CompletionStage<java.util.concurrent.Flow.Publisher<java.nio.ByteBuffer>>>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerRequestMapperModule], tags=[], method=byteBufferPublisherAsyncRequestMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.HttpServerRequestMapper<java.util.concurrent.CompletionStage<ru.tinkoff.kora.http.common.form.FormUrlEncoded>>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerRequestMapperModule], tags=[], method=formUrlEncodedAsyncServerRequestMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.HttpServerRequestMapper<java.util.concurrent.CompletionStage<ru.tinkoff.kora.http.server.common.HttpServerRequest>>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerRequestMapperModule], tags=[], method=noopAsyncRequestMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.HttpServerRequestMapper<java.util.concurrent.Flow.Publisher<java.nio.ByteBuffer>>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerRequestMapperModule], tags=[], method=byteBufferPublisherRequestMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.HttpServerRequestMapper<ru.tinkoff.kora.http.common.form.FormUrlEncoded>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerRequestMapperModule], tags=[], method=formUrlEncoderHttpServerRequestMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.HttpServerRequestMapper<ru.tinkoff.kora.http.server.common.HttpServerRequest>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerRequestMapperModule], tags=[], method=noopRequestMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.HttpServerResponseMapper<byte[]>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerResponseMapperModule], tags=[], method=byteArrayResponseMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.HttpServerResponseMapper<java.lang.String>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerResponseMapperModule], tags=[], method=stringResponseMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.HttpServerResponseMapper<java.nio.ByteBuffer>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerResponseMapperModule], tags=[], method=byteBufBodyResponseMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.HttpServerResponseMapper<ru.tinkoff.kora.http.common.HttpResponseEntity<T>>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerResponseMapperModule], tags=[], method=<T>httpServerResponseEntityMapper(ru.tinkoff.kora.http.server.common.handler.HttpServerResponseMapper<T>), methodParameterTypes=[ru.tinkoff.kora.http.server.common.handler.HttpServerResponseMapper<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.HttpServerResponseMapper<ru.tinkoff.kora.http.server.common.HttpServerResponse>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerResponseMapperModule], tags=[], method=noopResponseMapper(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.StringParameterReader<T>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.StringParameterReadersModule], tags=[], method=<T>enumStringParameterReader(ru.tinkoff.kora.application.graph.TypeRef<T>), methodParameterTypes=[ru.tinkoff.kora.application.graph.TypeRef<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.StringParameterReader<java.lang.Boolean>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.StringParameterReadersModule], tags=[], method=javaUtilBooleanStringParameterReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.StringParameterReader<java.lang.Double>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.StringParameterReadersModule], tags=[], method=javaUtilDoubleStringParameterReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.StringParameterReader<java.lang.Float>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.StringParameterReadersModule], tags=[], method=javaUtilFloatStringParameterReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.StringParameterReader<java.lang.Integer>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.StringParameterReadersModule], tags=[], method=javaUtilIntegerStringParameterReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.StringParameterReader<java.lang.Long>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.StringParameterReadersModule], tags=[], method=javaUtilLongStringParameterReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.StringParameterReader<java.time.LocalDate>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.StringParameterReadersModule], tags=[], method=javaTimeLocalDateStringParameterReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.StringParameterReader<java.time.LocalDateTime>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.StringParameterReadersModule], tags=[], method=javaTimeLocalDateTimeStringParameterReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.StringParameterReader<java.time.LocalTime>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.StringParameterReadersModule], tags=[], method=javaTimeLocalTimeStringParameterReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.StringParameterReader<java.time.OffsetDateTime>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.StringParameterReadersModule], tags=[], method=javaTimeOffsetDateTimeStringParameterReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.StringParameterReader<java.time.OffsetTime>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.StringParameterReadersModule], tags=[], method=javaTimeOffsetTimeStringParameterReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.StringParameterReader<java.time.ZonedDateTime>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.StringParameterReadersModule], tags=[], method=javaTimeZonedDateTimeStringParameterReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.handler.StringParameterReader<java.util.UUID>, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.StringParameterReadersModule], tags=[], method=javaUtilUUIDStringParameterReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.router.PublicApiHandler, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerModule], tags=[], method=publicApiHandler(ru.tinkoff.kora.application.graph.All<ru.tinkoff.kora.http.server.common.handler.HttpServerRequestHandler>,ru.tinkoff.kora.application.graph.All<ru.tinkoff.kora.http.server.common.HttpServerInterceptor>,ru.tinkoff.kora.http.server.common.telemetry.HttpServerTelemetryFactory,ru.tinkoff.kora.http.server.common.HttpServerConfig), methodParameterTypes=[ru.tinkoff.kora.application.graph.All<ru.tinkoff.kora.http.server.common.handler.HttpServerRequestHandler>, ru.tinkoff.kora.application.graph.All<ru.tinkoff.kora.http.server.common.HttpServerInterceptor>, ru.tinkoff.kora.http.server.common.telemetry.HttpServerTelemetryFactory, ru.tinkoff.kora.http.server.common.HttpServerConfig], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.telemetry.DefaultHttpServerTelemetryFactory, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerModule], tags=[], method=defaultHttpServerTelemetryFactory(ru.tinkoff.kora.http.server.common.telemetry.HttpServerLoggerFactory,ru.tinkoff.kora.http.server.common.telemetry.HttpServerMetricsFactory,ru.tinkoff.kora.http.server.common.telemetry.HttpServerTracerFactory), methodParameterTypes=[ru.tinkoff.kora.http.server.common.telemetry.HttpServerLoggerFactory, ru.tinkoff.kora.http.server.common.telemetry.HttpServerMetricsFactory, ru.tinkoff.kora.http.server.common.telemetry.HttpServerTracerFactory], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.common.telemetry.Slf4jHttpServerLoggerFactory, module=MixedInModule[element=ru.tinkoff.kora.http.server.common.HttpServerModule], tags=[], method=slf4jHttpServerLoggerFactory(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.undertow.UndertowHttpServer, module=MixedInModule[element=ru.tinkoff.kora.http.server.undertow.UndertowHttpServerModule], tags=[], method=undertowHttpServer(ru.tinkoff.kora.application.graph.ValueOf<ru.tinkoff.kora.http.server.common.HttpServerConfig>,ru.tinkoff.kora.application.graph.ValueOf<ru.tinkoff.kora.http.server.undertow.UndertowPublicApiHandler>,org.xnio.XnioWorker), methodParameterTypes=[ru.tinkoff.kora.application.graph.ValueOf<ru.tinkoff.kora.http.server.common.HttpServerConfig>, ru.tinkoff.kora.application.graph.ValueOf<ru.tinkoff.kora.http.server.undertow.UndertowPublicApiHandler>, org.xnio.XnioWorker], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.undertow.UndertowPrivateApiHandler, module=MixedInModule[element=ru.tinkoff.kora.http.server.undertow.UndertowModule], tags=[], method=undertowPrivateApiHandler(ru.tinkoff.kora.http.server.common.PrivateApiHandler), methodParameterTypes=[ru.tinkoff.kora.http.server.common.PrivateApiHandler], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.undertow.UndertowPrivateHttpServer, module=MixedInModule[element=ru.tinkoff.kora.http.server.undertow.UndertowModule], tags=[], method=undertowPrivateHttpServer(ru.tinkoff.kora.application.graph.ValueOf<ru.tinkoff.kora.http.server.common.HttpServerConfig>,ru.tinkoff.kora.application.graph.ValueOf<ru.tinkoff.kora.http.server.undertow.UndertowPrivateApiHandler>,org.xnio.XnioWorker), methodParameterTypes=[ru.tinkoff.kora.application.graph.ValueOf<ru.tinkoff.kora.http.server.common.HttpServerConfig>, ru.tinkoff.kora.application.graph.ValueOf<ru.tinkoff.kora.http.server.undertow.UndertowPrivateApiHandler>, org.xnio.XnioWorker], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.http.server.undertow.UndertowPublicApiHandler, module=MixedInModule[element=ru.tinkoff.kora.http.server.undertow.UndertowHttpServerModule], tags=[], method=undertowPublicApiHandler(ru.tinkoff.kora.http.server.common.router.PublicApiHandler,ru.tinkoff.kora.http.server.common.telemetry.HttpServerTracerFactory,ru.tinkoff.kora.http.server.common.HttpServerConfig), methodParameterTypes=[ru.tinkoff.kora.http.server.common.router.PublicApiHandler, ru.tinkoff.kora.http.server.common.telemetry.HttpServerTracerFactory, ru.tinkoff.kora.http.server.common.HttpServerConfig], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.lang.Boolean>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=booleanJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.lang.Double>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=doubleJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.lang.Integer>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=integerJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.lang.Long>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=longJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.lang.Object>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=objectJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.lang.String>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=stringJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.math.BigDecimal>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=bigDecimalJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.math.BigInteger>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=bigIntegerJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.time.DayOfWeek>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=dayOfWeekJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.time.Duration>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=durationJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.time.Instant>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=instantJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.time.LocalDate>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=localDateJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.time.LocalDateTime>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=localDateTimeJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.time.LocalTime>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=localTimeJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.time.Month>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=monthJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.time.MonthDay>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=monthDayJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.time.OffsetDateTime>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=offsetDateTimeJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.time.OffsetTime>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=offsetTimeJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.time.Year>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=yearJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.time.YearMonth>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=yearMonthJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.time.ZoneId>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=zoneIdJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.time.ZonedDateTime>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=zonedDateTimeJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.util.List<T>>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=<T>listJsonReaderFactory(ru.tinkoff.kora.json.common.JsonReader<T>), methodParameterTypes=[ru.tinkoff.kora.json.common.JsonReader<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.util.Map<java.lang.String,T>>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=<T>mapJsonReaderFactory(ru.tinkoff.kora.json.common.JsonReader<T>), methodParameterTypes=[ru.tinkoff.kora.json.common.JsonReader<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.util.Set<T>>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=<T>setJsonReaderFactory(ru.tinkoff.kora.json.common.JsonReader<T>), methodParameterTypes=[ru.tinkoff.kora.json.common.JsonReader<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.util.SortedSet<T>>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=<T>sortedSetJsonReaderFactory(ru.tinkoff.kora.json.common.JsonReader<T>), methodParameterTypes=[ru.tinkoff.kora.json.common.JsonReader<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonReader<java.util.UUID>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=uuidJsonReader(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.lang.Boolean>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=booleanJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.lang.Double>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=doubleJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.lang.Integer>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=integerJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.lang.Long>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=longJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.lang.Object>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=objectJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.lang.String>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=stringJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.math.BigDecimal>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=bigDecimalJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.math.BigInteger>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=bigIntegerJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.time.DayOfWeek>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=dayOfWeekJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.time.Duration>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=durationJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.time.Instant>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=instantJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.time.LocalDate>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=localDateJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.time.LocalDateTime>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=localDateTimeJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.time.LocalTime>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=localTimeJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.time.Month>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=monthJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.time.MonthDay>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=monthDayJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.time.OffsetDateTime>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=offsetDateTimeJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.time.OffsetTime>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=offsetTimeJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.time.Year>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=yearJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.time.YearMonth>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=yearMonthJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.time.ZoneId>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=zoneIdJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.time.ZonedDateTime>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=zonedDateTimeJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.util.List<T>>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=<T>listJsonWriterFactory(ru.tinkoff.kora.json.common.JsonWriter<T>), methodParameterTypes=[ru.tinkoff.kora.json.common.JsonWriter<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.util.Map<java.lang.String,T>>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=<T>mapJsonWriterFactory(ru.tinkoff.kora.json.common.JsonWriter<T>), methodParameterTypes=[ru.tinkoff.kora.json.common.JsonWriter<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.util.Set<T>>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=<T>setJsonWriterFactory(ru.tinkoff.kora.json.common.JsonWriter<T>), methodParameterTypes=[ru.tinkoff.kora.json.common.JsonWriter<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<java.util.UUID>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=uuidJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.common.JsonWriter<ru.tinkoff.kora.json.common.RawJson>, module=MixedInModule[element=ru.tinkoff.kora.json.common.JsonCommonModule], tags=[], method=rawJsonWriter(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.module.http.client.JsonAsyncHttpClientResponseMapper<T>, module=MixedInModule[element=ru.tinkoff.kora.json.module.JsonModule], tags=[ru.tinkoff.kora.json.common.annotation.Json], method=<T>jsonAsyncHttpClientResponseMapper(ru.tinkoff.kora.json.common.JsonReader<T>), methodParameterTypes=[ru.tinkoff.kora.json.common.JsonReader<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.module.http.client.JsonHttpClientRequestMapper<T>, module=MixedInModule[element=ru.tinkoff.kora.json.module.JsonModule], tags=[ru.tinkoff.kora.json.common.annotation.Json], method=<T>jsonHttpClientRequestMapper(ru.tinkoff.kora.json.common.JsonWriter<T>), methodParameterTypes=[ru.tinkoff.kora.json.common.JsonWriter<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.module.http.client.JsonHttpClientResponseMapper<T>, module=MixedInModule[element=ru.tinkoff.kora.json.module.JsonModule], tags=[ru.tinkoff.kora.json.common.annotation.Json], method=<T>jsonHttpClientResponseMapper(ru.tinkoff.kora.json.common.JsonReader<T>), methodParameterTypes=[ru.tinkoff.kora.json.common.JsonReader<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.module.http.client.JsonReaderAsyncHttpClientResponseEntityMapper<T>, module=MixedInModule[element=ru.tinkoff.kora.json.module.JsonModule], tags=[ru.tinkoff.kora.json.common.annotation.Json], method=<T>jsonReaderAsyncHttpClientResponseEntityMapper(ru.tinkoff.kora.json.common.JsonReader<T>), methodParameterTypes=[ru.tinkoff.kora.json.common.JsonReader<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.module.http.client.JsonReaderHttpClientResponseEntityMapper<T>, module=MixedInModule[element=ru.tinkoff.kora.json.module.JsonModule], tags=[ru.tinkoff.kora.json.common.annotation.Json], method=<T>jsonReaderHttpClientResponseEntityMapper(ru.tinkoff.kora.json.common.JsonReader<T>), methodParameterTypes=[ru.tinkoff.kora.json.common.JsonReader<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.module.http.client.JsonStringParameterConverter<T>, module=MixedInModule[element=ru.tinkoff.kora.json.module.JsonModule], tags=[ru.tinkoff.kora.json.common.annotation.Json], method=<T>jsonStringParameterConverter(ru.tinkoff.kora.json.common.JsonWriter<T>), methodParameterTypes=[ru.tinkoff.kora.json.common.JsonWriter<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.module.http.server.JsonReaderAsyncHttpServerRequestMapper<T>, module=MixedInModule[element=ru.tinkoff.kora.json.module.JsonModule], tags=[ru.tinkoff.kora.json.common.annotation.Json], method=<T>jsonReaderAsyncHttpServerRequestMapper(ru.tinkoff.kora.json.common.JsonReader<T>), methodParameterTypes=[ru.tinkoff.kora.json.common.JsonReader<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.module.http.server.JsonReaderHttpServerRequestMapper<T>, module=MixedInModule[element=ru.tinkoff.kora.json.module.JsonModule], tags=[ru.tinkoff.kora.json.common.annotation.Json], method=<T>jsonRequestMapper(ru.tinkoff.kora.json.common.JsonReader<T>), methodParameterTypes=[ru.tinkoff.kora.json.common.JsonReader<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.module.http.server.JsonStringParameterReader<T>, module=MixedInModule[element=ru.tinkoff.kora.json.module.JsonModule], tags=[ru.tinkoff.kora.json.common.annotation.Json], method=<T>jsonStringParameterReader(ru.tinkoff.kora.json.common.JsonReader<T>), methodParameterTypes=[ru.tinkoff.kora.json.common.JsonReader<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.module.http.server.JsonWriterHttpServerEntityResponseMapper<T>, module=MixedInModule[element=ru.tinkoff.kora.json.module.JsonModule], tags=[ru.tinkoff.kora.json.common.annotation.Json], method=<T>jsonResponseEntityMapper(ru.tinkoff.kora.json.common.JsonWriter<T>), methodParameterTypes=[ru.tinkoff.kora.json.common.JsonWriter<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.module.http.server.JsonWriterHttpServerResponseMapper<T>, module=MixedInModule[element=ru.tinkoff.kora.json.module.JsonModule], tags=[ru.tinkoff.kora.json.common.annotation.Json], method=<T>jsonResponseMapper(ru.tinkoff.kora.json.common.JsonWriter<T>), methodParameterTypes=[ru.tinkoff.kora.json.common.JsonWriter<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.module.kafka.JsonKafkaDeserializer<T>, module=MixedInModule[element=ru.tinkoff.kora.json.module.JsonModule], tags=[ru.tinkoff.kora.json.common.annotation.Json], method=<T>jsonKafkaDeserializer(ru.tinkoff.kora.json.common.JsonReader<T>), methodParameterTypes=[ru.tinkoff.kora.json.common.JsonReader<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.json.module.kafka.JsonKafkaSerializer<T>, module=MixedInModule[element=ru.tinkoff.kora.json.module.JsonModule], tags=[ru.tinkoff.kora.json.common.annotation.Json], method=<T>jsonKafkaSerializer(ru.tinkoff.kora.json.common.JsonWriter<T>), methodParameterTypes=[ru.tinkoff.kora.json.common.JsonWriter<T>], typeVariables=[T], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.micrometer.module.PrometheusMeterRegistryWrapper, module=MixedInModule[element=ru.tinkoff.kora.micrometer.module.MetricsModule], tags=[], method=prometheusMeterRegistry(ru.tinkoff.kora.application.graph.All<ru.tinkoff.kora.micrometer.module.PrometheusMeterRegistryInitializer>), methodParameterTypes=[ru.tinkoff.kora.application.graph.All<ru.tinkoff.kora.micrometer.module.PrometheusMeterRegistryInitializer>], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.micrometer.module.cache.MicrometerCacheMetrics, module=MixedInModule[element=ru.tinkoff.kora.micrometer.module.MetricsModule], tags=[], method=micrometerCacheMetrics(io.micrometer.core.instrument.MeterRegistry), methodParameterTypes=[io.micrometer.core.instrument.MeterRegistry], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.micrometer.module.cache.caffeine.MicrometerCaffeineCacheMetricCollector, module=MixedInModule[element=ru.tinkoff.kora.micrometer.module.MetricsModule], tags=[], method=caffeineCacheMetricsCollector(io.micrometer.core.instrument.MeterRegistry), methodParameterTypes=[io.micrometer.core.instrument.MeterRegistry], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.micrometer.module.db.MicrometerDataBaseMetricWriterFactory, module=MixedInModule[element=ru.tinkoff.kora.micrometer.module.MetricsModule], tags=[], method=micrometerDataBaseMetricWriterFactory(io.micrometer.core.instrument.MeterRegistry), methodParameterTypes=[io.micrometer.core.instrument.MeterRegistry], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.micrometer.module.grpc.client.MicrometerGrpcClientMetricsFactory, module=MixedInModule[element=ru.tinkoff.kora.micrometer.module.MetricsModule], tags=[], method=micrometerGrpcClientMetricsFactory(io.micrometer.core.instrument.MeterRegistry), methodParameterTypes=[io.micrometer.core.instrument.MeterRegistry], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.micrometer.module.grpc.server.MicrometerGrpcServerMetricsFactory, module=MixedInModule[element=ru.tinkoff.kora.micrometer.module.MetricsModule], tags=[], method=micrometerGrpcServerMetricsFactory(io.micrometer.core.instrument.MeterRegistry), methodParameterTypes=[io.micrometer.core.instrument.MeterRegistry], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.micrometer.module.http.client.MicrometerHttpClientMetricsFactory, module=MixedInModule[element=ru.tinkoff.kora.micrometer.module.MetricsModule], tags=[], method=micrometerHttpClientMetricsFactory(io.micrometer.core.instrument.MeterRegistry), methodParameterTypes=[io.micrometer.core.instrument.MeterRegistry], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.micrometer.module.http.server.MicrometerHttpServerMetricsFactory, module=MixedInModule[element=ru.tinkoff.kora.micrometer.module.MetricsModule], tags=[], method=micrometerHttpServerMetricsFactory(io.micrometer.core.instrument.MeterRegistry,ru.tinkoff.kora.micrometer.module.http.server.tag.MicrometerHttpServerTagsProvider), methodParameterTypes=[io.micrometer.core.instrument.MeterRegistry, ru.tinkoff.kora.micrometer.module.http.server.tag.MicrometerHttpServerTagsProvider], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.micrometer.module.http.server.MicrometerPrivateApiMetrics, module=MixedInModule[element=ru.tinkoff.kora.micrometer.module.MetricsModule], tags=[], method=micrometerPrivateApiMetrics(io.micrometer.prometheus.PrometheusMeterRegistry), methodParameterTypes=[io.micrometer.prometheus.PrometheusMeterRegistry], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.micrometer.module.http.server.tag.MicrometerHttpServerTagsProvider, module=MixedInModule[element=ru.tinkoff.kora.micrometer.module.MetricsModule], tags=[], method=micrometerHttpServerTagsProvider(), methodParameterTypes=[], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.micrometer.module.jms.consumer.MicrometerJmsConsumerMetricsFactory, module=MixedInModule[element=ru.tinkoff.kora.micrometer.module.MetricsModule], tags=[], method=micrometerJmsConsumerMetricsFactory(io.micrometer.core.instrument.MeterRegistry), methodParameterTypes=[io.micrometer.core.instrument.MeterRegistry], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.micrometer.module.kafka.consumer.MicrometerKafkaConsumerMetricsFactory, module=MixedInModule[element=ru.tinkoff.kora.micrometer.module.MetricsModule], tags=[], method=micrometerKafkaConsumerMetricsFactory(io.micrometer.core.instrument.MeterRegistry), methodParameterTypes=[io.micrometer.core.instrument.MeterRegistry], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.micrometer.module.kafka.producer.MicrometerKafkaProducerMetricsFactory, module=MixedInModule[element=ru.tinkoff.kora.micrometer.module.MetricsModule], tags=[], method=micrometerKafkaProducerMetricsFactory(io.micrometer.core.instrument.MeterRegistry), methodParameterTypes=[io.micrometer.core.instrument.MeterRegistry], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.micrometer.module.resilient.MicrometerCircuitBreakerMetrics, module=MixedInModule[element=ru.tinkoff.kora.micrometer.module.MetricsModule], tags=[], method=micrometerCircuitBreakerMetrics(io.micrometer.core.instrument.MeterRegistry), methodParameterTypes=[io.micrometer.core.instrument.MeterRegistry], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.micrometer.module.resilient.MicrometerFallbackMetrics, module=MixedInModule[element=ru.tinkoff.kora.micrometer.module.MetricsModule], tags=[], method=micrometerFallbackMetrics(io.micrometer.core.instrument.MeterRegistry), methodParameterTypes=[io.micrometer.core.instrument.MeterRegistry], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.micrometer.module.resilient.MicrometerRetryMetrics, module=MixedInModule[element=ru.tinkoff.kora.micrometer.module.MetricsModule], tags=[], method=micrometerRetryMetrics(io.micrometer.core.instrument.MeterRegistry), methodParameterTypes=[io.micrometer.core.instrument.MeterRegistry], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.micrometer.module.resilient.MicrometerTimeoutMetrics, module=MixedInModule[element=ru.tinkoff.kora.micrometer.module.MetricsModule], tags=[], method=micrometerTimeoutMetrics(io.micrometer.core.instrument.MeterRegistry), methodParameterTypes=[io.micrometer.core.instrument.MeterRegistry], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.micrometer.module.scheduling.MicrometerSchedulingMetricsFactory, module=MixedInModule[element=ru.tinkoff.kora.micrometer.module.MetricsModule], tags=[], method=micrometerSchedulingMetricsFactory(io.micrometer.core.instrument.MeterRegistry), methodParameterTypes=[io.micrometer.core.instrument.MeterRegistry], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.micrometer.module.soap.client.MicrometerSoapClientMetricsFactory, module=MixedInModule[element=ru.tinkoff.kora.micrometer.module.MetricsModule], tags=[], method=micrometerSoapClientMetricsFactory(io.micrometer.core.instrument.MeterRegistry), methodParameterTypes=[io.micrometer.core.instrument.MeterRegistry], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.scheduling.common.telemetry.DefaultSchedulingTelemetryFactory, module=MixedInModule[element=ru.tinkoff.kora.scheduling.common.SchedulingModule], tags=[], method=defaultSchedulingTelemetryFactory(ru.tinkoff.kora.telemetry.common.TelemetryConfig,ru.tinkoff.kora.scheduling.common.telemetry.SchedulingMetricsFactory,ru.tinkoff.kora.scheduling.common.telemetry.SchedulingTracerFactory,ru.tinkoff.kora.scheduling.common.telemetry.SchedulingLoggerFactory), methodParameterTypes=[ru.tinkoff.kora.telemetry.common.TelemetryConfig, ru.tinkoff.kora.scheduling.common.telemetry.SchedulingMetricsFactory, ru.tinkoff.kora.scheduling.common.telemetry.SchedulingTracerFactory, ru.tinkoff.kora.scheduling.common.telemetry.SchedulingLoggerFactory], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.scheduling.jdk.JdkSchedulingExecutor, module=MixedInModule[element=ru.tinkoff.kora.scheduling.jdk.SchedulingJdkModule], tags=[], method=scheduledExecutorServiceLifecycle(ru.tinkoff.kora.scheduling.jdk.ScheduledExecutorServiceConfig), methodParameterTypes=[ru.tinkoff.kora.scheduling.jdk.ScheduledExecutorServiceConfig], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.scheduling.jdk.ScheduledExecutorServiceConfig, module=MixedInModule[element=ru.tinkoff.kora.scheduling.jdk.SchedulingJdkModule], tags=[], method=scheduledExecutorServiceConfig(ru.tinkoff.kora.config.common.Config,ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<ru.tinkoff.kora.scheduling.jdk.ScheduledExecutorServiceConfig>), methodParameterTypes=[ru.tinkoff.kora.config.common.Config, ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<ru.tinkoff.kora.scheduling.jdk.ScheduledExecutorServiceConfig>], typeVariables=[], isInterceptor=false]
    FromModuleComponent[type=ru.tinkoff.kora.telemetry.common.TelemetryConfig, module=MixedInModule[element=ru.tinkoff.kora.scheduling.common.SchedulingModule], tags=[ru.tinkoff.kora.scheduling.common.SchedulingModule], method=defaultSchedulingConfig(ru.tinkoff.kora.config.common.Config,ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<ru.tinkoff.kora.telemetry.common.TelemetryConfig>), methodParameterTypes=[ru.tinkoff.kora.config.common.Config, ru.tinkoff.kora.config.common.extractor.ConfigValueExtractor<ru.tinkoff.kora.telemetry.common.TelemetryConfig>], typeVariables=[], isInterceptor=false]

2023-12-10 22:04:17.480 [Execution worker] INFO  ru.tinkoff.kora.kora.app.annotation.processor.KoraAppProcessor  Generated previous Round:
    org.example.client.$$OncallAuthClient_Config_ConfigValueExtractor
    org.example.client.$$OncallClient_Config_ConfigValueExtractor

2023-12-10 22:04:17.504 [Execution worker] INFO  ru.tinkoff.kora.json.annotation.processor.JsonProcessor  Generating JsonReader for org.example.dto.LoginResponse
2023-12-10 22:04:17.509 [Execution worker] INFO  ru.tinkoff.kora.json.annotation.processor.JsonProcessor  Generating JsonReader for org.example.dto.LoginResponse
2023-12-10 22:04:17.527 [Execution worker] INFO  ru.tinkoff.kora.kora.app.annotation.processor.KoraAppProcessor  Generated previous Round:
    org.example.dto.$LoginResponse_JsonReader

2023-12-10 22:04:17.542 [Execution worker] INFO  ru.tinkoff.kora.json.annotation.processor.JsonProcessor  Generating JsonWriter for org.example.dto.UserRequest
2023-12-10 22:04:17.565 [Execution worker] INFO  ru.tinkoff.kora.kora.app.annotation.processor.KoraAppProcessor  Generated previous Round:
    org.example.dto.$UserRequest_JsonWriter

2023-12-10 22:04:17.588 [Execution worker] INFO  ru.tinkoff.kora.config.annotation.processor.ConfigParserGenerator  Generating ConfigValueExtractor for ru.tinkoff.kora.scheduling.jdk.ScheduledExecutorServiceConfig
2023-12-10 22:04:17.603 [Execution worker] INFO  ru.tinkoff.kora.kora.app.annotation.processor.KoraAppProcessor  Generated previous Round:
    ru.tinkoff.kora.scheduling.jdk.$ScheduledExecutorServiceConfig_ConfigValueExtractor

2023-12-10 22:04:17.620 [Execution worker] INFO  ru.tinkoff.kora.kora.app.annotation.processor.KoraAppProcessor  Nothing was generated previous Round.
